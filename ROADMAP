Sequencer24/Seq24 Roadmap
Chris Ahlstrom
2015-07-23 to 2015-08-28

The starting point for the Sequencer24 project is version
0.9.2 of seq24.  Sequencer24 starts with version 0.9.3.

The following changes are planned ('x' means it is done):

x  -  Create a Git project out of the existing Seq24 files: sequencer24
x  -  Branch off to a permanent "Legacy" branch:
   x  -  Add this ROADMAP file to the legacy branch.
   x  -  Make any changes needed to get the code to build and running in the
         old way.  Hopefully, no changes will be needed.
   x  -  Tag the legacy branch and record the tag in this ROADMAP:
         Legacy commit #: 3ab98816b494a5b0a8aedd04e7fd7f6fe8c3e96f
         Legacy tag name: "v0.9.2"
x  -  Branch off to a "Debian" branch:
   x  -  Add the Debian files obtained from Debian.org, and verify that
         a Debian package could be made.
   x  -  Merge "Debian" back into the main trunk.
x  -  Branch off to a "Catchup" branch:
   x  -  Add the LASH fixes found on GitHub, and verify functionality.
   x  -  Other easy fixes found anywhere?
   x  -  Merge "Catchup" back into the main trunk.
   x  -  Tagged as "Catchup", commit 8ea385884b7629424243b347f645b7d3720a3857.
x  -  Branch off to a "Packaging" branch:
   x  -  Add a bootstrap script and its helper scripts.
   x  -  Update configure.in to configure.ac and add our standard features
         for better-tailored builds.
   x  -  Add a pack script.
   x  -  Add our licensing (for clarification)
   x  -  Fix and verify any Debian packaging issues that crop up.
   x  -  Merge "Packaging" back into the main trunk.
x  -  Branch off to a "Gtkmm-3" branch.
   x  -  Update the GUI, document the changes, and verify functionality.
   x  -  Merge "Gtkmm-3" back into the main trunk.
   x  -  WARNING:  We found later that we accidentally left some GTKMM-2.4
         references in configure.ac.  We are going to go back to 2.4 and
         work this out, eventually, in a future "GtkmmUpgrade" branch, to be
         determined.
x  -  Branch off to a "Document" branch:
   x  -  Fall back to Gtkmm-2.4!!!
   x  -  Document each module to a limited extent.
   x  -  Simplify and normalize the #include files to speed up builds and
         make the actual module arrangement easier to grok.
   x  -  Get an idea of the design, and document it.  Look for ways
         to collect common code into base classes.
   x  -  Make the code a bit cleaner, such as eliminating "using namespace"
         directives, eliminating dead variables, etc.
   x  -  Generate Doxygen documentation.
   x  -  Merge "Document" back into the main trunk.
y  -  Branch off to a "Fixes" branch to fix these issues:
   x  -  Ignore updating patterns/sequences that are empty (i.e. just a
         track-name) during playback.  This is done, playing of empty
         sequences will be ignored, as is updating the progress bar.  Can
         be disabled at configure/build time; see the mainwid and
         perfnames modules, and configure.ac.
   x  -  Add more musical scales.  Added harmonic minor, melodic minor, and
         C whole tone scales.
   x  -  Ctrl-E in main window brings up Song Editor, but also toggles the
         sequence controlled by key "e".
   x  -  Write the proprietary section of Seq24 in a more MIDI-compliant
         format (i.e. as a track) so that applications like midicvt can
         read it; add a --legacy option to write the MIDI file in the old
         format.
   x  -  Make a --lash/--no-lash option, for when LASH support is enabled
         in the build configuration.
   x  -  Lock the size of the Patterns Panel (expanding it just shows more
         grey, and it resizes horizontally very slowly).
   y  -  Fix issue where doing nothing causes a save prompt upon exit.
         This happens only if the Song Editor is opened.  Partly fixed,
         but needs more verification.  Now disabled; also need prompt when
         new notes and patterns are edited.  A big task, really.
      -  Neither the Song Editor nor the Pattern Editor scroll to the next page
         when the progress bar moves off the right.
      -  The std::list the Seq24 uses is fast, but it does not allow for
         direct access to list elements, and the push/pop paradigm causes
         a reversal of some events (program change) that makes it impossible
         to reliably diff the MIDI files that result.
      -  Reading a MIDI file is very slow in debug mode, but does not seem to
         be due to mutex locking.
   x  -  Replace calls to lock()/unlock() with an automutex instance for
         better safety.
      -  Opening a pattern edit while playback is happening yields
         issues in keeping the progress line up-to-date.
   y  -  More friendliness for two-button mice.  Currently, there is an
         option to hold the Mod4 (Super or Windows) key when releasing a
         right-click, to allow adding notes to continue anyway, until
         an unadorned right click is made.  Also added to the options
         file, but not yet a GUI-editable item.  Also reveals that
         we need to set-dirty when adding notes to a sequence.
   -  Branch off to a "Library" branch:
      -  Break out non-GUI functionality into libsequencer24.
      -  Unit test each element as appropriate using xpc-suite
         functionality.
      -  Add some base classes and additional member functions for common
         functionality:
         -  Gtk::Drawable-derived base class
         -  Handle Windows vs. Linux code more cleanly.
            -  Windows/Linux mastermidibus bases class
            -  Windows/Linux midibus bases class
         -  An autolock object to simplify many of the locked functions.
      -  Enhance documentation and recreate it.
      -  Rebuild application using library code.
      -  Verify functionality.
      -  Merge "Library" back into the main trunk.
   -  Create a separate "sequencer24-doc" project and update the
      documentation to reflect the name changes and new project.
   -  Branch off to an "Enhancements" branch:
      -  TO BE DETERMINED.

Eventually, there will be a few features and fixes to try to add:

   -  A MIDI event text pane to display (and later edit) all MIDI events.
   -  Speed up the horizontal resize on the Song/Performance Editor.
   -  Make it possible to use Alt or Ctrl plus a sequence-toggling
      key to bring up an edit dialog for that sequence.
   -  Get the Song editor's "Increase size of grid" button working.
      Also document it.

There's actually not a lot to improve though, in Seq24 functionality, except
to keep the project active and living.  A very nice project!

Git Graph:

o Origin.
   o  Legacy
      o  ROADMAP
      o  Build and verify
      o  Tag and record the tag
   o  Debian
      o  Debian directory
      o  Build, build deb and verify
   o  Catchup
      o  LASH fixes
      o  Other fixes
      o  Build, build deb and verify
   o  Packaging
      o  bootstrap
      o  pack
      o  Build, build deb and verify
   o  Gtkmm-3
      o  GUI update
      o  Update-related comments
      o  Build, build deb and verify
   o  Document
      o  Add module comments
      o  Generate Doxygen design documentation
      o  Build, build deb and verify
   o  Library
      o  Refactor to a library
      o  Build using library
      o  Build, build deb and verify
   o  Enhancements
      o  TBD

Old dependencies:

   awk
   librt (POSIX.1b Realtime Library)
   libgtkmm-2.4
   libsigc++-2.0
   libasound
   JACK
   lash-1.0

# vim: sw=4 ts=4 wm=8 et ft=sh
