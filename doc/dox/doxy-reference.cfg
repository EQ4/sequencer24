#*****************************************************************************
# sequencer24/doc/dox/doxy_reference.cfg
#-----------------------------------------------------------------------------
##
# \file       	doxy_reference.cfg
# \library    	sequencer24
# \author     	Chris Ahlstrom)
# \date       	2015-08-08
# \update     	2015-08-14
# \version    	$Revision$
# \license    	$XPC_SUITE_GPL_LICENSE$
#
#     This "Doxyfile" provides the configuration needed to build the XPC
#     library suite documentation.  It describes the settings to be used by
#     the documentation system Doxygen (www.doxygen.org) for a project.
#
# \references
#     -  http://www.stack.nl/~dimitri/doxygen/config.html
#
#-----------------------------------------------------------------------------

#-----------------------------------------------------------------------------
# Project related configuration options
#-----------------------------------------------------------------------------
#
# The PROJECT_NAME tag is a single word (or a /short/ sequence of words
# surrounded by quotes) that should identify the project.  This name is used
# in the title of most generated pages and in a few other places.
#
#---------------------------------------------------------------------------

PROJECT_NAME           = "Sequencer24 Developer's Reference Manual"

#---------------------------------------------------------------------------
# The PROJECT_NUMBER tag can be used to enter a project or revision number.
# This could be handy for archiving the generated documentation or
# if some version control system is used.
#---------------------------------------------------------------------------

PROJECT_NUMBER         = 0.9.3

#---------------------------------------------------------------------------
# The OUTPUT_DIRECTORY tag is used to specify the (relative or absolute)
# base path where the generated documentation will be put.  If a relative
# path is entered, it will be relative to the location where doxygen was
# started. If left blank the current directory will be used.
#---------------------------------------------------------------------------

OUTPUT_DIRECTORY       = "."

#---------------------------------------------------------------------------
# CREATE_SUBDIRS set to "YES" will cause subdirectories to be created to
# hold the various parts of the documentation "tree".
# Enabling this option can be useful when feeding doxygen a huge amount of
# source files, where putting all generated files in the same directory
# would otherwise causes performance problems for the file system.
#---------------------------------------------------------------------------

CREATE_SUBDIRS         = YES

#---------------------------------------------------------------------------
# The OUTPUT_LANGUAGE tag is used to specify the language in which all
# documentation generated by doxygen is written. Doxygen will use this
# information to generate all constant output in the proper language.
# The default language is English, other supported languages are:
# Brazilian, Chinese, Croatian, Czech, Danish, Dutch, Finnish, French,
# German, Greek, Hungarian, Italian, Japanese, Korean, Norwegian, Polish,
# Portuguese, Romanian, Russian, Slovak, Slovene, Spanish and Swedish.
#---------------------------------------------------------------------------

OUTPUT_LANGUAGE        = English

#---------------------------------------------------------------------------
# USE_WINDOWS_ENCODING can be used to specify the encoding used in the
# generated output. The encoding is not always determined by the language
# that is chosen, but also whether or not the output is meant for Windows or
# non-Windows users. In case there is a difference, setting the
# USE_WINDOWS_ENCODING tag to YES forces the Windows encoding, (this is the
# default for the Windows binary), whereas setting the tag to NO uses a
# Unix-style encoding (the default for all platforms other than Windows).
#
# Obsolete: USE_WINDOWS_ENCODING   = NO
#---------------------------------------------------------------------------

#---------------------------------------------------------------------------
# If the REPEAT_BRIEF tag is set to YES (the default) doxygen will prepend
# the brief description of a member or function before the detailed
# description.
#
# Note:
#
#   If both HIDE_UNDOC_MEMBERS and BRIEF_MEMBER_DESC are set to NO, the
#   brief descriptions will be completely suppressed.
#
#---------------------------------------------------------------------------

BRIEF_MEMBER_DESC      = YES

#---------------------------------------------------------------------------
# If the REPEAT_BRIEF tag is set to YES (the default) Doxygen will prepend
# the brief description of a member or function before the detailed
# description.  Note: if both HIDE_UNDOC_MEMBERS and BRIEF_MEMBER_DESC are
# set to NO, the brief descriptions will be completely suppressed.
#---------------------------------------------------------------------------

REPEAT_BRIEF           = NO # YES

#---------------------------------------------------------------------------
# ABBREVIATE_BRIEF.  This tag implements a quasi-intelligent brief
# description abbreviator that is used to form the text in various listings.
# Each string in this list, if found as the leading text of the brief
# description, will be stripped from the text and the result after
# processing the whole list, is used as the annotated text. Otherwise, the
# brief description is used as-is. If left blank, the following values are
# used ("\$name" is automatically replaced with the name of the entity):
# "The $name class" "The $name widget" "The $name file" "is" "provides"
# "specifies" "contains" "represents" "a" "an" "the".
#---------------------------------------------------------------------------

ABBREVIATE_BRIEF = \
 "The $name class" \
 "The $name widget" \
 "The $name file" \
 is \
 provides \
 specifies \
 contains \
 represents \
 a \
 an \
 the

#---------------------------------------------------------------------------
# If the ALWAYS_DETAILED_SEC and REPEAT_BRIEF tags are both set to YES then
# Doxygen will generate a detailed section even if there is only a brief
# description.
#---------------------------------------------------------------------------

ALWAYS_DETAILED_SEC    = NO

#---------------------------------------------------------------------------
# If the INLINE_INHERITED_MEMB tag is set to YES, doxygen will show all
# inherited members of a class in the documentation of that class as if
# those members were ordinary class members. Constructors, destructors and
# assignment operators of the base classes will not be shown.
#---------------------------------------------------------------------------

INLINE_INHERITED_MEMB  = NO

#---------------------------------------------------------------------------
# If the FULL_PATH_NAMES tag is set to YES then Doxygen will prepend the
# full path before files name in the file list and in the header files. If
# set to NO the shortest path that makes the file name unique will be used.
#
# If the FULL_PATH_NAMES tag is set to YES then the STRIP_FROM_PATH tag can
# be used to strip a user defined part of the path. Stripping is only done
# if one of the specified strings matches the left-hand part of the path. It
# is allowed to use relative paths in the argument list.
#
# FULL_PATH_NAMES      = YES
#
#---------------------------------------------------------------------------

FULL_PATH_NAMES        = NO

#---------------------------------------------------------------------------
# STRIP_FROM_PATH.  If the FULL_PATH_NAMES tag is set to YES then the
# STRIP_FROM_PATH tag can be used to strip a user-defined part of the path.
# Stripping is only done if one of the specified strings matches the
# left-hand part of the path. The tag can be used to show relative paths in
# the file list. If left blank the directory from which doxygen is run is
# used as the path to strip.
#
# STRIP_FROM_PATH      = /home/ahlstrom/mls/oss/libs/xpc/
#
#---------------------------------------------------------------------------

STRIP_FROM_PATH        =

#---------------------------------------------------------------------------
# The STRIP_FROM_INC_PATH tag can be used to strip a user-defined part of
# the path mentioned in the documentation of a class, which tells the
# reader which header file to include in order to use a class. If left
# blank only the name of the header file containing the class definition
# is used. Otherwise one should specify the include paths that are
# normally passed to the compiler using the -I flag.
#---------------------------------------------------------------------------

STRIP_FROM_INC_PATH    = 

#---------------------------------------------------------------------------
#  If the SHORT_NAMES tag is set to YES, doxygen will generate much shorter
#  (but less readable) file names. This can be useful is your file systems
#  doesn't support long names like on DOS, Mac, or CD-ROM.
#---------------------------------------------------------------------------

SHORT_NAMES            = NO

#---------------------------------------------------------------------------
# If the JAVADOC_AUTOBRIEF tag is set to YES then Doxygen will interpret the
# first line (until the first dot) of a JavaDoc-style comment as the brief
# description. If set to NO, the JavaDoc comments will behave just like the
# Qt-style comments (thus requiring an explict @brief command for a brief
# description.
#---------------------------------------------------------------------------

JAVADOC_AUTOBRIEF      = YES

#---------------------------------------------------------------------------
# The MULTILINE_CPP_IS_BRIEF tag can be set to YES to make Doxygen treat a
# multi-line C++ special comment block (i.e. a block of //! or /// comments)
# as a brief description. This used to be the default behaviour. The new
# default is to treat a multi-line C++ comment block as a detailed
# description. Set this tag to YES if you prefer the old behaviour instead.
# Note that setting this tag to YES also means that Rational Rose comments
# are not recognized any more.
#---------------------------------------------------------------------------

MULTILINE_CPP_IS_BRIEF = NO

#---------------------------------------------------------------------------
# The DETAILS_AT_TOP option shows the detailed description at the top of the
# page, instead of providing a "More..." link.  If the DETAILS_AT_TOP
# tag is set to YES then Doxygen will output the detailed description near
# the top, like JavaDoc. If set to NO, the detailed description appears
# after the member documentation.
#
# Obsolete: DETAILS_AT_TOP         = YES
#---------------------------------------------------------------------------

#---------------------------------------------------------------------------
# If the INHERIT_DOCS tag is set to YES (the default) then an undocumented
# member inherits the documentation from any documented member that it
# reimplements.
#---------------------------------------------------------------------------

INHERIT_DOCS           = NO # YES

#---------------------------------------------------------------------------
# If the SEPARATE_MEMBER_PAGES tag is set to YES, then doxygen will produce
# a new page for each member. If set to NO, the documentation of a member
# will be part of the file/class/namespace that contains it.
#---------------------------------------------------------------------------

SEPARATE_MEMBER_PAGES  = NO

#---------------------------------------------------------------------------
# The TAB_SIZE tag can be used to set the number of spaces in a tab.
# Doxygen uses this value to replace tabs by spaces in code fragments.
#---------------------------------------------------------------------------

TAB_SIZE               = 3

#---------------------------------------------------------------------------
# This tag can be used to specify a number of aliases that acts as commands
# in the documentation. An alias has the form "name=value".  For example
# adding "sideeffect=\par Side Effects:\n" will allow you to put the command
# \sideeffect (or @sideeffect) in the documentation, which will result in a
# user defined paragraph with heading "Side Effects:".  You can put \n's in
# the value part of an alias to insert newlines.
#---------------------------------------------------------------------------

ALIASES =   \
   "abc=\n<b>Abstract Base Class</b>\n"                   \
   "abstract=\n<b>Abstract Base Class</b>\n"              \
   "accessor=\n<b>Accessor</b>\n"                         \
   "algorithm=\n<b>Algorithm</b>\n"                       \
   "assumptions=\n<b>Assumption(s)</b>\n"                 \
   "author=\n<b>Author(s)</b> "                           \
   "background=\n<b>Background</b>\n"                     \
   "bit32=\n<b>32-bit</b>\n"                              \
   "bit64=\n<b>64-bit</b>\n"                              \
   "broken=<i>Broken</i>"                                 \
   "callback=<i>Callback function</i>"                    \
   "change=<i>Change Note</i>"                            \
   "configuration=\n<b>Configuration Element</b>\n"       \
   "constructor=\n<b>Constructor</b>\n"                   \
   "convention=\n<b>Convention</b>\n"                     \
   "contents=\n<b>Table of Contents</b>\n"                \
   "copyctor=<i>Copy constructor</i>"                     \
   "crossplatform=\n<b>Cross-platform</b>\n"              \
   "ctor=<i>Constructor</i>"                              \
   "cutnpaste=\n<b>Cut-and-Paste Code</b>\n"              \
   "cygwin=\n<b>Cygwin</b>\n"                             \
   "date=\n<b>Date</b> "                                  \
   "debug=\n<b>Debugging</b>\n"                           \
   "default=\n<b>Default</b>\n\n"                         \
   "defaultctor=<i>Default constructor</i>"               \
   "designdoc=\n<b>Design Section</b>\n\n"                \
   "destructor=\n<b>Destructor</b>\n"                     \
   "doxygen=\n<b>Doxygen</b>\n"                           \
   "dtor=<i>Destructor</i>"                               \
   "dummy=\n<b>Dummy Item</b>\n"                          \
   "example=\n<b>Example</b>\n"                           \
   "friendof=\n<b>Friend of</b>\n"                        \
   "freebsd=\n<b>FreeBSD</b>\n"                           \
   "gcc=\n<b>GCC</b>\n"                                   \
   "goals=\n<b>Goals</b>\n"                               \
   "getter=<i>'Getter' function</i> for member \e "       \
   "gnu=\n<b>GNU</b>\n"                                   \
   "hardwired=\n<b>Hard-wired</b>\n"                      \
   "history=\n<b>History</b>\n"                           \
   "inline=<i>inlined</i>"                                \
   "install=\n<b>Installation</b>\n"                      \
   "intro=\n<b>Introduction</b>\n"                        \
   "library=\n<b>Library</b> "                            \
   "license=<b>License</b> "                              \
   "linux=\n<b>Linux</b>\n"                               \
   "macosx=\n<b>Mac OSX</b>\n"                            \
   "macro=\n<b>Macro</b>\n"                               \
   "obsolete=<i>Obsolete</i>"                             \
   "op=<i>Operator</i>"                                   \
   "options=\n<b>Options</b>\n"                           \
   "xoperator=\n<b>Operator</b>\n"                        \
   "paop=<i>Principal assignment operator</i>"            \
   "paoperator=\n<b>Principal Assignment Operator</b>\n"  \
   "posix=\n<b>POSIX</b>\n"                               \
   "private=<i>Internal (static or private)</i>"          \
   "protected=<i>Protected</i>"                           \
   "public=<i>Public</i>"                                 \
   "pure=<i>Pure virtual function</i>"                    \
   "question=\n<b>Question</b>\n"                         \
   "recursive=<i>Recursive function</i>"                  \
   "reference=\n<b>Reference</b>\n"                       \
   "references=\n<b>References</b>\n"                     \
   "requirements=\n<b>Requirements</b>\n"                 \
   "setter=<i>'Setter' function</i> for member \e "       \
   "sideeffect=\n<b>Side-effect(s)</b>\n\n"               \
   "singleton=<i>Singleton</i>"                           \
   "solaris=\n<b>Solaris</b>\n"                           \
   "steps=\n<b>Function Steps</b>\n"                      \
   "summary=\n<b>Summary</b>"                             \
   "tests=\n<b>Test Case For</b>\n"                       \
   "threadsafe=<i>Threadsafe</i>"                         \
   "threadunsafe=<i>Not threadsafe</i>"                   \
   "tip=\n<b>Tip</b>\n"                                   \
   "tricky=\n<b>Tricky Code</b>\n"                        \
   "undocumented=\n<b>Undocumented</b>\n"                 \
   "unittests=\n<b>Unit Test(s)</b>\n"                    \
   "unix=\n<b>Other UNIX</b>\n"                           \
   "usecase=\n<b>Use Cases</b>\n"                         \
   "update=\n<b>Last Edit</b> "                           \
   "updates=\n<b>Last Edits</b> "                         \
   "usage=\n<b>Usage</b>\n\n"                             \
   "virtual=<i>Virtual function</i>"                      \
   "win32=\n<b>Win32</b>\n"                               \
   "win64=\n<b>Win64</b>\n"

#---------------------------------------------------------------------------
# Set the OPTIMIZE_OUTPUT_FOR_C tag to YES if your project consists of C
# sources only. Doxygen will then generate output that is more tailored for
# C.  For instance some of the names that are used will be different. The
# list of all members will be omitted, etc.
#---------------------------------------------------------------------------

OPTIMIZE_OUTPUT_FOR_C  = YES

#---------------------------------------------------------------------------
#  Set the OPTIMIZE_OUTPUT_JAVA tag to YES if your project consists of Java
#  or Python sources only. Doxygen will then generate output that is more
#  tailored for that language. For instance, namespaces will be presented as
#  packages, qualified scopes will look different, etc.
#---------------------------------------------------------------------------

OPTIMIZE_OUTPUT_JAVA   = NO

#---------------------------------------------------------------------------
# BUILTIN_STL_SUPPORT.  If you use STL classes (i.e. std::string,
# std::vector, etc.) but do not want to include (a tag file for) the STL
# sources as input, then you should set this tag to YES in order to let
# doxygen match functions declarations and definitions whose arguments
# contain STL classes (e.g. func(std::string); v.s. func(std::string) {}).
# This also make the inheritance and collaboration diagrams that involve STL
# classes more complete and accurate.
#
# Not supported in doxygen 1.4.4, but leave it in anyway for now.
# Nahhhhhhhh.
#
# BUILTIN_STL_SUPPORT    = NO
#
#---------------------------------------------------------------------------

#---------------------------------------------------------------------------
# If member grouping is used in the documentation and the
# DISTRIBUTE_GROUP_DOC tag is set to YES, then doxygen will reuse the
# documentation of the first member in the group (if any) for the other
# members of the group. By default all members of a group must be documented
# explicitly.
#---------------------------------------------------------------------------

DISTRIBUTE_GROUP_DOC   = NO

#---------------------------------------------------------------------------
# Set the SUBGROUPING tag to YES (the default) to allow class member groups
# of the same type (for instance a group of public functions) to be put as
# a subgroup of that type (e.g. under the Public Functions section). Set it
# to NO to prevent subgrouping. Alternatively, this can be done per class
# using the \nosubgrouping command.
#---------------------------------------------------------------------------

SUBGROUPING            = YES

#---------------------------------------------------------------------------
# Build related configuration options
#---------------------------------------------------------------------------
#
# We set most of these EXTRACTs to YES.
#
# If the EXTRACT_ALL tag is set to YES doxygen will assume all entities in
# documentation are documented, even if no documentation was available.
#
# Doxygen will also disable the WARN_IF_UNDOCUMENTED option.
#
# Private class members and static file members will be hidden unless the
# EXTRACT_PRIVATE and EXTRACT_STATIC tags are set to YES.
#
# If the EXTRACT_LOCAL_CLASSES tag is set to YES classes (and structs)
# defined locally in source files will be included in the documentation.  If
# set to NO only classes defined in header files are included.
#
# EXTRACT_LOCAL_METHODS.  This flag is only useful for Objective-C code.
# When set to YES local methods, which are defined in the implementation
# section but not in the interface are included in the documentation. If set
# to NO (the default) only methods in the interface are included.
#
#---------------------------------------------------------------------------

EXTRACT_ALL            = NO
EXTRACT_PRIVATE        = NO # YES
EXTRACT_STATIC         = YES
EXTRACT_LOCAL_CLASSES  = NO # YES
EXTRACT_LOCAL_METHODS  = NO # YES

#---------------------------------------------------------------------------
# If the HIDE_UNDOC_MEMBERS tag is set to YES, Doxygen will hide all
# undocumented members of documented classes, files or namespaces.  If set
# to NO (the default) these members will be included in the various
# overviews, but no documentation section is generated.  This option has no
# effect if EXTRACT_ALL is enabled.
#---------------------------------------------------------------------------

HIDE_UNDOC_MEMBERS     = YES

#---------------------------------------------------------------------------
# If the HIDE_UNDOC_CLASSES tag is set to YES, Doxygen will hide all
# undocumented classes that are normally visible in the class hierarchy.  If
# set to NO (the default) these class will be included in the various
# overviews. This option has no effect if EXTRACT_ALL is enabled.
#---------------------------------------------------------------------------

HIDE_UNDOC_CLASSES     = YES

#---------------------------------------------------------------------------
# If the HIDE_FRIEND_COMPOUNDS tag is set to YES, Doxygen will hide all
# friend (class|struct|union) declarations. If set to NO (the default) these
# declarations will be included in the documentation.
#---------------------------------------------------------------------------

HIDE_FRIEND_COMPOUNDS  = NO

#---------------------------------------------------------------------------
#  If the HIDE_IN_BODY_DOCS tag is set to YES, Doxygen will hide any
#  documentation blocks found inside the body of a function. If set to NO
#  (the default) these blocks will be appended to the function's detailed
#  documentation block.
#---------------------------------------------------------------------------

HIDE_IN_BODY_DOCS      = NO

#---------------------------------------------------------------------------
# The INTERNAL_DOCS tag determines if documentation that is typed after a
# \internal command is included. If the tag is set to NO (the default) then
# the documentation will be excluded.  Set it to YES to include the internal
# documentation.
#---------------------------------------------------------------------------

INTERNAL_DOCS          = NO

#---------------------------------------------------------------------------
# If the CASE_SENSE_NAMES tag is set to NO then Doxygen will only generate
# file names in lower case letters. If set to YES upper case letters are
# also allowed. This is useful if you have classes or files whose names only
# differ in case and if your file system supports case sensitive file names.
# Windows users are adviced to set this option to NO.
#---------------------------------------------------------------------------

CASE_SENSE_NAMES       = YES

#---------------------------------------------------------------------------
# If the HIDE_SCOPE_NAMES tag is set to NO (the default) then Doxygen will
# show members with their full class and namespace scopes in the
# documentation. If set to YES the scope will be hidden.
#---------------------------------------------------------------------------

HIDE_SCOPE_NAMES       = NO

#---------------------------------------------------------------------------
# If the SHOW_INCLUDE_FILES tag is set to YES (the default) then Doxygen
# will put list of the files that are included by a file in the
# documentation of that file.
#---------------------------------------------------------------------------

SHOW_INCLUDE_FILES     = NO # YES

#---------------------------------------------------------------------------
# If the INLINE_INFO tag is set to YES (the default) then a tag [inline] is
# inserted in the documentation for inline members.
#---------------------------------------------------------------------------

INLINE_INFO            = YES

#---------------------------------------------------------------------------
# If the SORT_MEMBER_DOCS tag is set to YES (the default) then doxygen will
# sort the (detailed) documentation of file and class members alphabetically
# by member name. If set to NO the members will appear in declaration order.
#---------------------------------------------------------------------------

SORT_MEMBER_DOCS       = NO # YES
SORT_BRIEF_DOCS        = NO
SORT_BY_SCOPE_NAME     = NO

#---------------------------------------------------------------------------
# The GENERATE_TODOLIST tag can be used to enable (YES) or disable (NO) the
# todo list. This list is created by putting \todo commands in the
# documentation.
#---------------------------------------------------------------------------

GENERATE_TODOLIST      = YES

#---------------------------------------------------------------------------
# The GENERATE_TESTLIST tag can be used to enable (YES) or disable (NO) the
# test list. This list is created by putting \test commands in the
# documentation.
#---------------------------------------------------------------------------

GENERATE_TESTLIST      = YES

#---------------------------------------------------------------------------
# The GENERATE_BUGLIST tag can be used to enable (YES) or disable (NO) the
# bug list. This list is created by putting \bug commands in the
# documentation.
#---------------------------------------------------------------------------

GENERATE_BUGLIST       = YES
GENERATE_DEPRECATEDLIST= YES

#---------------------------------------------------------------------------
# The ENABLED_SECTIONS tag can be used to enable conditional documentation
# sections, marked by \if sectionname ... \endif.
#---------------------------------------------------------------------------

ENABLED_SECTIONS       = 

#---------------------------------------------------------------------------
# The MAX_INITIALIZER_LINES tag determines the maximum number of lines the
# initial value of a variable or define consist of for it to appear in the
# documentation. If the initializer consists of more lines than specified
# here it will be hidden. Use a value of 0 to hide initializers completely.
# The appearance of the initializer of individual variables and defines in
# the documentation can be controlled using \showinitializer or
# \hideinitializer command in the documentation regardless of this setting.
#---------------------------------------------------------------------------

MAX_INITIALIZER_LINES  = 0 # 30

#---------------------------------------------------------------------------
# Set the SHOW_USED_FILES tag to NO to disable the list of files generated
# at the bottom of the documentation of classes and structs. If set to YES
# the list will mention the files that were used to generate the
# documentation.
#---------------------------------------------------------------------------

SHOW_USED_FILES        = NO # YES

#---------------------------------------------------------------------------
# Set the SHOW_FILES tag to NO to disable the generation of the Files page.
# This will remove the Files entry from the Quick Index and from the Folder
# Tree View (if specified). The default is YES.
#---------------------------------------------------------------------------

SHOW_FILES             = NO # YES

#---------------------------------------------------------------------------
# If the sources in your project are distributed over multiple directories
# then setting the SHOW_DIRECTORIES tag to YES will show the directory
# hierarchy in the documentation.
#---------------------------------------------------------------------------

SHOW_DIRECTORIES       = NO # YES

#---------------------------------------------------------------------------
# Set the SHOW_NAMESPACES tag to NO to disable the generation of the
# Namespaces page. This will remove the Namespaces entry from the Quick
# Index and from the Folder Tree View (if specified). The default is YES.
#---------------------------------------------------------------------------

SHOW_NAMESPACES        = NO # YES

#---------------------------------------------------------------------------
# The FILE_VERSION_FILTER tag can be used to specify a program or script
# that doxygen should invoke to get the current version for each file
# (typically from the version control system). Doxygen will invoke the
# program by executing (via popen()) the command command input-file, where
# command is the value of the FILE_VERSION_FILTER tag, and input-file is the
# name of an input file provided by doxygen.  Whatever the program writes to
# standard output is used as the file version.
#
# Example of using a shell script as a filter for Unix:
#
#    FILE_VERSION_FILTER = "/bin/sh versionfilter.sh"
#
# Example shell script for CVS:
#
#   #!/bin/sh
#   cvs status $1 | sed -n 's/^[ \]*Working revision:
#        [ \t]*\([0-9][0-9\.]*\).*/\1/p'
#
# Example shell script for Subversion:
#
#   #!/bin/sh
#   svn stat -v $1 | sed -n 's/^[ A-Z?\*|!]\{1,15\}/r/;s/ \{1,15\}/\/r/;s/ .*//p'
#
# Example filter for ClearCase:
#
#   FILE_VERSION_INFO = "cleartool desc -fmt \%Vn"
#
#---------------------------------------------------------------------------

FILE_VERSION_FILTER    = 

#---------------------------------------------------------------------------
# configuration options related to warning and progress messages
#---------------------------------------------------------------------------
#
# The QUIET tag can be used to turn on/off the messages that are generated
# by doxygen. Possible values are YES and NO. If left blank NO is used.
#
#---------------------------------------------------------------------------

QUIET                  = NO

#---------------------------------------------------------------------------
# The WARNINGS tag can be used to turn on/off the warning messages that are
# generated by doxygen. Possible values are YES and NO. If left blank NO is
# used.  Use YES every so often to check for real problems.  Or leave it at
# YES and set the warning logfile below, like we did.  (Actually, we now use
# the shell's > and 2> redirection operators if make docs is used.)
#---------------------------------------------------------------------------

WARNINGS               = YES

#---------------------------------------------------------------------------
# If WARN_IF_UNDOCUMENTED is set to YES, then doxygen will generate warnings
# for undocumented members. If EXTRACT_ALL is set to YES then this flag will
# automatically be disabled.
#
# If WARN_IF_DOC_ERROR is set to YES, doxygen will generate warnings for
# potential errors in the documentation, such as not documenting some
# parameters in a documented function, or documenting parameters that don't
# exist or using markup commands wrongly.
#
# This WARN_NO_PARAMDOC option can be abled to get warnings for functions
# that are documented, but have no documentation for their parameters or
# return value. If set to NO (the default) doxygen will only warn about
# wrong or incomplete parameter documentation, but not about the absence of
# documentation.
#---------------------------------------------------------------------------

WARN_IF_UNDOCUMENTED   = YES
WARN_IF_DOC_ERROR      = YES
WARN_NO_PARAMDOC       = YES

#---------------------------------------------------------------------------
# The WARN_FORMAT tag determines the format of the warning messages that
# doxygen can produce. The string should contain the $file, $line, and $text
# tags, which will be replaced by the file and line number from which the
# warning originated and the warning text.
#---------------------------------------------------------------------------

WARN_FORMAT            = "$file:$line: $text"

#---------------------------------------------------------------------------
# The WARN_LOGFILE tag can be used to specify a file to which warning and
# error messages should be written. If left blank the output is written to
# stderr.  You'll want a log file to cut down a little on the verbiage, as
# warnings for innocuous stuff are all too common.
#---------------------------------------------------------------------------

WARN_LOGFILE           = "dox-warnings.log"

#---------------------------------------------------------------------------
# Configuration options related to the input files
#---------------------------------------------------------------------------
#
# The INPUT tag can be used to specify the files and/or directories that
# contain documented source files. You may enter file names like
# "myfile.cpp" or directories like "/usr/src/myproject". Separate the files
# or directories with spaces.
#
# The directory here specifies the relative path needed to get to the
# xpc_suite directory, so that /all/ of the libraries and applications can
# be documented.  (However, note that we want only our special *.dox files
# to be included in the overarching front-matter XPC suite documentation.)
#
# There seems to be no difference in the ordering of pages when the
# following is used.  We'd really like to be able to control the page
# ordering.
#
# We're going to eliminate some modules to cut down on the size of the
# document.  For example, redundant Windows support, utility headers like
# easy_macros.h, simple stuff like the mutex module, the fruity variants,
# etc.
#
#    ../../src
#
#---------------------------------------------------------------------------

INPUT = mainpage-reference.dox \
 ../../src/configfile.cpp \
 ../../src/configfile.h \
 ../../src/controllers.h \
 ../../src/event.cpp \
 ../../src/event.h \
 ../../src/font.cpp \
 ../../src/font.h \
 ../../src/globals.cpp \
 ../../src/globals.h \
 ../../src/keybindentry.cpp \
 ../../src/keybindentry.h \
 ../../src/lash.cpp \
 ../../src/lash.h \
 ../../src/maintime.cpp \
 ../../src/maintime.h \
 ../../src/mainwid.cpp \
 ../../src/mainwid.h \
 ../../src/mainwnd.cpp \
 ../../src/mainwnd.h \
 ../../src/mastermidibus.cpp \
 ../../src/mastermidibus.h \
 ../../src/midibus_common.h \
 ../../src/midibus.cpp \
 ../../src/midibus.h \
 ../../src/midifile.cpp \
 ../../src/midifile.h \
 ../../src/options.cpp \
 ../../src/optionsfile.cpp \
 ../../src/optionsfile.h \
 ../../src/options.h \
 ../../src/perfedit.cpp \
 ../../src/perfedit.h \
 ../../src/perfnames.cpp \
 ../../src/perfnames.h \
 ../../src/perform.cpp \
 ../../src/perform.h \
 ../../src/perfroll.cpp \
 ../../src/perfroll.h \
 ../../src/perfroll_input.cpp \
 ../../src/perfroll_input.h \
 ../../src/perftime.cpp \
 ../../src/perftime.h \
 ../../src/seq24seq.cpp \
 ../../src/seq24seq.h \
 ../../src/seq24seqroll.cpp \
 ../../src/seq24seqroll.h \
 ../../src/seqdata.cpp \
 ../../src/seqdata.h \
 ../../src/seqedit.cpp \
 ../../src/seqedit.h \
 ../../src/seqevent.cpp \
 ../../src/seqevent.h \
 ../../src/seqkeys.cpp \
 ../../src/seqkeys.h \
 ../../src/seqmenu.cpp \
 ../../src/seqmenu.h \
 ../../src/seqroll.cpp \
 ../../src/seqroll.h \
 ../../src/seqtime.cpp \
 ../../src/seqtime.h \
 ../../src/sequence.cpp \
 ../../src/sequence.h \
 ../../src/userfile.cpp \
 ../../src/userfile.h \
 license.dox

#---------------------------------------------------------------------------
# If the value of the INPUT tag contains directories, you can use the
# FILE_PATTERNS tag to specify one or more wildcard pattern (like *.cpp and
# *.h) to filter out the source-files in the directories. If left blank the
# following patterns are tested:
#
#     *.c *.cc *.cxx *.c++ *.java *.ii *.ixx *.ipp *.i++ *.inl *.h *.hh
#     *.hxx *.hpp *.h++ *.idl
#
#---------------------------------------------------------------------------

FILE_PATTERNS = *.dox *.c *.cpp *.h *.hpp

#---------------------------------------------------------------------------
# The RECURSIVE tag can be used to turn specify whether or not
# subdirectories should be searched for input files as well. Possible values
# are YES and NO.  If left blank NO is used.
#---------------------------------------------------------------------------

RECURSIVE              = YES

#---------------------------------------------------------------------------
# The EXCLUDE tag can be used to specify files and/or directories that
# should excluded from the INPUT source files. This way you can easily
# exclude a subdirectory from a directory tree whose root is specified with
# the INPUT tag.
#---------------------------------------------------------------------------

EXCLUDE                =

#---------------------------------------------------------------------------
# The EXCLUDE_SYMLINKS tag can be used select whether or not files or
# directories that are symbolic links (a Unix filesystem feature) are
# excluded from the input.
#---------------------------------------------------------------------------

EXCLUDE_SYMLINKS       = NO

#---------------------------------------------------------------------------
# If the value of the INPUT tag contains directories, you can use the
# EXCLUDE_PATTERNS tag to specify one or more wildcard patterns to exclude
# certain files from those directories.
#
# We don't want to document the intl code (it is GNU code), the inspiration
# code (it is not ours), or the safety code (it is not useful).
#---------------------------------------------------------------------------

EXCLUDE_PATTERNS = */intl/*         \
   */inspiration/*   \
   */doc/Notes/*     \
   */m4/*            \
   */man/*           \
   */safety/*        \
   */tests/*         \
   */tools/*         \
   */tmp/*           \
   */contrib/*

#---------------------------------------------------------------------------
# The EXAMPLE_PATH tag can be used to specify one or more files or
# directories that contain example code fragments that are included (see the
# \include command).
#---------------------------------------------------------------------------

EXAMPLE_PATH           = 

#---------------------------------------------------------------------------
# If the value of the EXAMPLE_PATH tag contains directories, you can use the
# EXAMPLE_PATTERNS tag to specify one or more wildcard pattern (like *.cpp
# and *.h) to filter out the source-files in the directories. If left blank
# all files are included.
#---------------------------------------------------------------------------

EXAMPLE_PATTERNS       = *

#---------------------------------------------------------------------------
# If the EXAMPLE_RECURSIVE tag is set to YES then subdirectories will be
# searched for input files to be used with the \include or \dontinclude
# commands irrespective of the value of the RECURSIVE tag.  Possible values
# are YES and NO. If left blank NO is used.
#---------------------------------------------------------------------------

EXAMPLE_RECURSIVE      = NO

#---------------------------------------------------------------------------
# The IMAGE_PATH tag can be used to specify one or more files or directories
# that contain image that are included in the documentation (see the \image
# command).
#---------------------------------------------------------------------------

IMAGE_PATH             = 

#---------------------------------------------------------------------------
# The INPUT_FILTER tag can be used to specify a program that doxygen should
# invoke to filter for each input file. Doxygen will invoke the filter
# program by executing (via popen()) the command <filter> <input-file>,
# where <filter> is the value of the INPUT_FILTER tag, and <input-file> is
# the name of an input file. Doxygen will then use the output that the
# filter program writes to standard output.
#
# INPUT_FILTER         = "sed -e \"/long on[A-Za-z0-9_]*\(.*\)/d\""
# INPUT_FILTER         = ./filter.pl
#
#---------------------------------------------------------------------------

INPUT_FILTER           = 
FILTER_PATTERNS        = 

#---------------------------------------------------------------------------
# If the FILTER_SOURCE_FILES tag is set to YES, the input filter (if set
# using INPUT_FILTER) will be used to filter the input files when producing
# source files to browse.
#---------------------------------------------------------------------------

FILTER_SOURCE_FILES    = NO

#---------------------------------------------------------------------------
# configuration options related to source browsing
#---------------------------------------------------------------------------
#
# If the SOURCE_BROWSER tag is set to YES then a list of source files will
# be generated. Documented entities will be cross-referenced with these
# sources.  This adds a lot to the output, but makes it easy for the casual
# reader to peruse the code.  And comments do not appear, and so the code is
# not cluttered.
#
#---------------------------------------------------------------------------

SOURCE_BROWSER         = NO # YES

#---------------------------------------------------------------------------
# Setting the INLINE_SOURCES tag to YES will include the body of functions
# and classes directly in the documentation.
#---------------------------------------------------------------------------

INLINE_SOURCES         = NO

#---------------------------------------------------------------------------
# Setting the STRIP_CODE_COMMENTS tag to YES (the default) will instruct
# doxygen to hide any special comment blocks from generated source code
# fragments. Normal C and C++ comments will always remain visible.
#---------------------------------------------------------------------------

STRIP_CODE_COMMENTS    = YES

#---------------------------------------------------------------------------
# If the REFERENCED_BY_RELATION tag is set to YES (the default) then for
# each documented function all documented functions referencing it will be
# listed.
#
# If the REFERENCES_RELATION tag is set to YES (the default) then for each
# documented function all documented entities called/used by that function
# will be listed.
#
# REFERENCES_LINK_SOURCE seems to be a new one.
#
#---------------------------------------------------------------------------

REFERENCED_BY_RELATION = NO
REFERENCES_RELATION    = NO
REFERENCES_LINK_SOURCE = NO # YES

#---------------------------------------------------------------------------
# If the USE_HTAGS tag is set to YES then the references to source code will
# point to the HTML generated by the htags(1) tool instead of doxygen
# built-in source browser. The htags tool is part of GNU's global source
# tagging system (see http://www.gnu.org/software/global/global.html). To
# use it do the following:
#
#   1. Install the latest version of global (i.e. 4.8.6 or better)
#   2. Enable SOURCE_BROWSER and USE_HTAGS in the config file
#   3. Make sure the INPUT points to the root of the source tree
#   4. Run doxygen as normal
#
# Doxygen will invoke htags (and that will in turn invoke gtags), so these
# tools must be available from the command line (i.e. in the search path).
#
# The result: instead of the source browser generated by doxygen, the links
# to source code will now point to the output of htags.
#
#---------------------------------------------------------------------------

USE_HTAGS              = NO

#---------------------------------------------------------------------------
# If the VERBATIM_HEADERS tag is set to YES (the default) then Doxygen will
# generate a verbatim copy of the header file for each class for which an
# include is specified. Set to NO to disable this.
#---------------------------------------------------------------------------

VERBATIM_HEADERS       = NO

#---------------------------------------------------------------------------
# configuration options related to the alphabetical class index
#---------------------------------------------------------------------------
#
# If the ALPHABETICAL_INDEX tag is set to YES, an alphabetical index of all
# compounds will be generated. Enable this if the project contains a lot of
# classes, structs, unions or interfaces.
#
# If the alphabetical index is enabled (see ALPHABETICAL_INDEX) then the
# COLS_IN_ALPHA_INDEX tag can be used to specify the number of columns in
# which this list will be split (can be a number in the range [1..20])
#
# In case all classes in a project start with a common prefix, all classes
# will be put under the same header in the alphabetical index.  The
# IGNORE_PREFIX tag can be used to specify one or more prefixes that should
# be ignored while generating the index headers.
#
#---------------------------------------------------------------------------

ALPHABETICAL_INDEX     = YES
COLS_IN_ALPHA_INDEX    = 5
IGNORE_PREFIX          = 

#---------------------------------------------------------------------------
# configuration options related to the HTML output
#---------------------------------------------------------------------------
#
# If the GENERATE_HTML tag is set to YES (the default) Doxygen will generate
# HTML output.
#
# The HTML_OUTPUT tag is used to specify where the HTML docs will be put.
# If a relative path is entered the value of OUTPUT_DIRECTORY will be put in
# front of it. If left blank `html' will be used as the default path.
#
# The HTML_HEADER tag can be used to specify a personal HTML header for each
# generated HTML page. If it is left blank doxygen will generate a standard
# header.
#
# The HTML_FOOTER tag can be used to specify a personal HTML footer for each
# generated HTML page. If it is left blank doxygen will generate a standard
# footer.
#
#---------------------------------------------------------------------------

GENERATE_HTML          = NO # YES
HTML_OUTPUT            = html
HTML_FILE_EXTENSION    = .html

#---------------------------------------------------------------------------
# Right now, this style sheet is disabled.  It removes the boxes around the
# function signatures, making the documentation more difficult to read.  We
# will have to improve the page.css file before we use it.
#
# HTML_STYLESHEET        = css/page.css
# HTML_HEADER            = css/header.html
# HTML_FOOTER            = css/footer.html
# HTML_STYLESHEET        = css/styles.css
# HTML_STYLESHEET        = css/menu.css
#---------------------------------------------------------------------------

HTML_HEADER            =
HTML_FOOTER            =
HTML_STYLESHEET        =

#---------------------------------------------------------------------------
# If the HTML_ALIGN_MEMBERS tag is set to YES, the members of classes, files
# or namespaces will be aligned in HTML using tables. If set to NO a bullet
# list will be used.
#---------------------------------------------------------------------------

HTML_ALIGN_MEMBERS     = YES

#---------------------------------------------------------------------------
# If the GENERATE_HTMLHELP tag is set to YES, additional index files will be
# generated that can be used as input for tools like the Microsoft HTML help
# workshop to generate a compressed HTML help file (.chm) of the generated
# HTML documentation.
#
# If the GENERATE_HTMLHELP tag is set to YES, the GENERATE_CHI flag controls
# if a separate .chi index file is generated (YES) or that it should be
# included in the master .chm file (NO).
#
# If the GENERATE_HTMLHELP tag is set to YES, the BINARY_TOC flag controls
# whether a binary table of contents is generated (YES) or a normal table of
# contents (NO) in the .chm file.
#---------------------------------------------------------------------------

GENERATE_HTMLHELP      = NO
CHM_FILE               = 
HHC_LOCATION           = 
GENERATE_CHI           = NO
BINARY_TOC             = NO

#---------------------------------------------------------------------------
# The TOC_EXPAND flag can be set to YES to add extra items for group members
# to the contents of the Html help documentation and to the tree view.
#---------------------------------------------------------------------------

TOC_EXPAND             = NO

#---------------------------------------------------------------------------
# The DISABLE_INDEX tag can be used to turn on/off the condensed index at
# top of each HTML page. The value NO (the default) enables the index and
# the value YES disables it.
#---------------------------------------------------------------------------

DISABLE_INDEX          = YES # NO

#---------------------------------------------------------------------------
# This tag can be used to set the number of enum values (range [1..20]) that
# doxygen will group on one line in the generated HTML documentation.
#---------------------------------------------------------------------------

ENUM_VALUES_PER_LINE   = 1

#---------------------------------------------------------------------------
# If the GENERATE_TREEVIEW tag is set to YES, a side panel will be generated
# containing a tree-like index structure (just like the one that is
# generated for HTML Help). For this to work a browser that supports
# JavaScript and frames is required (for instance Mozilla, Netscape 4.0+, or
# Internet explorer 4.0+). Note that for large projects the tree generation
# can take a very long time. In such cases it is better to disable this
# feature.  Windows users are probably better off using the HTML help
# feature.
#
# If the treeview is enabled (see GENERATE_TREEVIEW) then this tag can be
# used to set the initial width (in pixels) of the frame in which the tree
# is shown.
#
#---------------------------------------------------------------------------

GENERATE_TREEVIEW      = YES
TREEVIEW_WIDTH         = 250

#---------------------------------------------------------------------------
# configuration options related to the LaTeX output
#---------------------------------------------------------------------------
#
# If the GENERATE_LATEX tag is set to YES (the default) Doxygen will
# generate Latex output.
#
# The LATEX_OUTPUT tag is used to specify where the LaTeX docs will be put.
# If a relative path is entered the value of OUTPUT_DIRECTORY will be put in
# front of it. If left blank `latex' will be used as the default path.
#
# If the COMPACT_LATEX tag is set to YES Doxygen generates more compact
# LaTeX documents. This may be useful for small projects and may help to
# save some trees in general.
#
#---------------------------------------------------------------------------

GENERATE_LATEX         = YES
LATEX_OUTPUT           = latex
LATEX_CMD_NAME         = latex
MAKEINDEX_CMD_NAME     = makeindex
COMPACT_LATEX          = YES # NO

#---------------------------------------------------------------------------
# The PAPER_TYPE tag can be used to set the paper type that is used by the
# printer. Possible values are: a4, a4wide, letter, legal and executive. If
# left blank a4wide will be used.
#---------------------------------------------------------------------------

PAPER_TYPE             = a4wide

#---------------------------------------------------------------------------
# The EXTRA_PACKAGES tag can be to specify one or more names of LaTeX
# packages that should be included in the LaTeX output.
#---------------------------------------------------------------------------

EXTRA_PACKAGES         = 

#---------------------------------------------------------------------------
# The LATEX_HEADER tag can be used to specify a personal LaTeX header for
# the generated latex document. The header should contain everything until
# the first chapter. If it is left blank doxygen will generate a standard
# header. Notice: only use this tag if you know what you are doing!
#---------------------------------------------------------------------------

LATEX_HEADER           = 

#---------------------------------------------------------------------------
# If the PDF_HYPERLINKS tag is set to YES, the LaTeX that is generated is
# prepared for conversion to pdf (using ps2pdf). The pdf file will contain
# links (just like the HTML output) instead of page references This makes
# the output suitable for online browsing using a pdf viewer.
#---------------------------------------------------------------------------

PDF_HYPERLINKS         = YES

#---------------------------------------------------------------------------
# If the USE_PDFLATEX tag is set to YES, pdflatex will be used instead of
# plain latex in the generated Makefile. Set this option to YES to get a
# higher quality PDF documentation.
#---------------------------------------------------------------------------

USE_PDFLATEX           = YES

#---------------------------------------------------------------------------
# If the LATEX_BATCHMODE tag is set to YES, doxygen will add the
# \\batchmode.  command to the generated LaTeX files. This will instruct
# LaTeX to keep running if errors occur, instead of asking the user for
# help.  This option is also used when generating formulas in HTML.
#---------------------------------------------------------------------------

LATEX_BATCHMODE        = YES
LATEX_HIDE_INDICES     = NO

#---------------------------------------------------------------------------
# configuration options related to the RTF output
#---------------------------------------------------------------------------
#
# If the GENERATE_RTF tag is set to YES Doxygen will generate RTF output The
# RTF output is optimised for Word 97 and may not look very pretty with
# other RTF readers or editors.
#
# The RTF_OUTPUT tag is used to specify where the RTF docs will be put.  If
# a relative path is entered the value of OUTPUT_DIRECTORY will be put in
# front of it. If left blank `rtf' will be used as the default path.
#
# If the COMPACT_RTF tag is set to YES Doxygen generates more compact RTF
# documents. This may be useful for small projects and may help to save some
# trees in general.
#
#---------------------------------------------------------------------------

GENERATE_RTF           = NO
RTF_OUTPUT             = rtf
COMPACT_RTF            = NO

#---------------------------------------------------------------------------
# If the RTF_HYPERLINKS tag is set to YES, the RTF that is generated will
# contain hyperlink fields. The RTF file will contain links (just like the
# HTML output) instead of page references.  This makes the output suitable
# for online browsing using WORD or other programs which support those
# fields.  Note: wordpad (write) and others do not support links.
#---------------------------------------------------------------------------

RTF_HYPERLINKS         = NO

#---------------------------------------------------------------------------
# Load stylesheet definitions from file. Syntax is similar to doxygen's
# config file, i.e. a series of assigments. You only have to provide
# replacements, missing definitions are set to their default value.
#---------------------------------------------------------------------------

RTF_STYLESHEET_FILE    = 

#---------------------------------------------------------------------------
# Set optional variables used in the generation of an rtf document.  Syntax
# is similar to doxygen's config file.
#---------------------------------------------------------------------------

RTF_EXTENSIONS_FILE    =

#---------------------------------------------------------------------------
# configuration options related to the man page output
#---------------------------------------------------------------------------

#---------------------------------------------------------------------------
# If the GENERATE_MAN tag is set to YES (the default) Doxygen will generate
# man pages
#
# The MAN_OUTPUT tag is used to specify where the man pages will be put.  If
# a relative path is entered the value of OUTPUT_DIRECTORY will be put in
# front of it. If left blank `man' will be used as the default path.
#
# The MAN_EXTENSION tag determines the extension that is added to the
# generated man pages (default is the subroutine's section .3)
#
# If the MAN_LINKS tag is set to YES and Doxygen generates man output, then
# it will generate one additional man file for each entity documented in the
# real man page(s). These additional files only source the real man page,
# but without them the man command would be unable to find the correct page.
# The default is NO.
#
#---------------------------------------------------------------------------

GENERATE_MAN           = NO
MAN_OUTPUT             = man
MAN_EXTENSION          = .3
MAN_LINKS              = NO

#---------------------------------------------------------------------------
# configuration options related to the XML output
#---------------------------------------------------------------------------
#
# If the GENERATE_XML tag is set to YES Doxygen will generate an XML file
# that captures the structure of the code including all documentation. Note
# that this feature is still experimental and incomplete at the moment.
#
#---------------------------------------------------------------------------

GENERATE_XML           = NO
XML_OUTPUT             = xml
XML_SCHEMA             = 
XML_DTD                = 
XML_PROGRAMLISTING     = YES

#---------------------------------------------------------------------------
# configuration options for the AutoGen Definitions output
#---------------------------------------------------------------------------
#
# If the GENERATE_AUTOGEN_DEF tag is set to YES Doxygen will generate an
# AutoGen Definitions (see autogen.sf.net) file that captures the structure
# of the code including all documentation. Note that this feature is still
# experimental and incomplete at the moment.
#
#---------------------------------------------------------------------------

GENERATE_AUTOGEN_DEF   = NO

#---------------------------------------------------------------------------
# configuration options related to the Perl module output
#---------------------------------------------------------------------------

GENERATE_PERLMOD       = NO
PERLMOD_LATEX          = NO
PERLMOD_PRETTY         = YES
PERLMOD_MAKEVAR_PREFIX = 

#---------------------------------------------------------------------------
# Configuration options related to the preprocessor   
#---------------------------------------------------------------------------
#
# If the ENABLE_PREPROCESSING tag is set to YES (the default) Doxygen will
# evaluate all C-preprocessor directives found in the sources and include
# files.
#
#---------------------------------------------------------------------------

ENABLE_PREPROCESSING   = YES

#---------------------------------------------------------------------------
# If the MACRO_EXPANSION tag is set to YES Doxygen will expand all macro
# names in the source code. If set to NO (the default) only conditional
# compilation will be performed. Macro expansion can be done in a controlled
# way by setting EXPAND_ONLY_PREDEF to YES.
#---------------------------------------------------------------------------

MACRO_EXPANSION        = YES

#---------------------------------------------------------------------------
# If the EXPAND_ONLY_PREDEF and MACRO_EXPANSION tags are both set to YES
# then the macro expansion is limited to the macros specified with the
# PREDEFINED and EXPAND_AS_PREDEFINED tags.
#---------------------------------------------------------------------------

EXPAND_ONLY_PREDEF     = YES

#---------------------------------------------------------------------------
# If the SEARCH_INCLUDES tag is set to YES (the default) the includes files
# in the INCLUDE_PATH (see below) will be searched if a #include is found.
#
# The INCLUDE_PATH tag can be used to specify one or more directories that
# contain include files that are not input files but should be processed by
# the preprocessor.  (The Doxygen documentation actually specifies this
# option as "@INCLUDE_PATH", and describes the actual inclusion as
#
#        @INCLUDE = config_file_name
#        @INCLUDE_PATH = my_config_dir
#
# You can use the INCLUDE_FILE_PATTERNS tag to specify one or more wildcard
# patterns (like *.h and *.hpp) to filter out the header-files in the
# directories. If left blank, the patterns specified with FILE_PATTERNS will
# be used.
#---------------------------------------------------------------------------

SEARCH_INCLUDES        = YES
INCLUDE_PATH           = 
INCLUDE_FILE_PATTERNS  = 

#---------------------------------------------------------------------------
# The PREDEFINED tag can be used to specify one or more macro names that are
# defined before the preprocessor is started (similar to the -D option of
# gcc). The argument of the tag is a list of macros of the form: name or
# name=definition (no spaces). If the definition and the = are omitted =1 is
# assumed.
#
# In this Doxygen configuration for the XPC library, POSIX is predefined
# because the POSIX sections of ifdef's are where we put the Doxygen
# documentation for a function that has a separate Win32 implementation.
#
# The DOXYGEN symbol is also defined to allow exposing non-POSIX
# documentation where only a non-POSIX implementation exists (e.g. for the
# atomic_t-related modules.
#---------------------------------------------------------------------------

PREDEFINED             = DOXYGEN POSIX XPC_REVISION_DECL= EXTERN_C_DEC=

#---------------------------------------------------------------------------
# If the MACRO_EXPANSION and EXPAND_PREDEF_ONLY tags are set to YES then
# this tag can be used to specify a list of macro names that should be
# expanded.  The macro definition that is found in the sources will be used.
# Use the PREDEFINED tag if you want to use a different macro definition.
#---------------------------------------------------------------------------

EXPAND_AS_DEFINED      = 

#---------------------------------------------------------------------------
# If the SKIP_FUNCTION_MACROS tag is set to YES (the default) then doxygen's
# preprocessor will remove all function-like macros that are alone on a line
# and do not end with a semicolon. Such function macros are typically used
# for boiler-plate code, and will confuse the parser if not removed.
#---------------------------------------------------------------------------

SKIP_FUNCTION_MACROS   = YES

#---------------------------------------------------------------------------
# Configuration::additions related to external references   
#---------------------------------------------------------------------------
#
# The TAGFILES tag can be used to specify one or more tagfiles.  A tagfile
# is a .... (TODO)
#
# When a file name is specified after GENERATE_TAGFILE, doxygen will create
# a tag file that is based on the input files it reads.
#
#---------------------------------------------------------------------------

TAGFILES               = 
GENERATE_TAGFILE       = 

#---------------------------------------------------------------------------
# If the ALLEXTERNALS tag is set to YES all external classes will be listed
# in the class index. If set to NO only the inherited external classes will
# be listed.
#---------------------------------------------------------------------------

ALLEXTERNALS           = NO
EXTERNAL_GROUPS        = YES

#---------------------------------------------------------------------------
# The PERL_PATH should be the absolute path and name of the perl script
# interpreter (i.e. the result of `which perl').
#---------------------------------------------------------------------------

PERL_PATH              = /usr/bin/perl

#---------------------------------------------------------------------------
# Configuration options related to the dot tool   
#---------------------------------------------------------------------------
#
# If the CLASS_DIAGRAMS tag is set to YES (the default) Doxygen will
# generate a inheritance diagram (in Html, RTF and LaTeX) for classes with
# base or super classes. Setting the tag to NO turns the diagrams off. Note
# that this option is superceded by the HAVE_DOT option below. This is only
# a fallback. It is recommended to install and use dot, since it yield more
# powerful graphs.
#
#---------------------------------------------------------------------------

CLASS_DIAGRAMS         = YES

#---------------------------------------------------------------------------
# If set to YES, the inheritance and collaboration graphs will hide
# inheritance and usage relations if the target is undocumented or is not a
# class.
#---------------------------------------------------------------------------

HIDE_UNDOC_RELATIONS   = YES

#---------------------------------------------------------------------------
# If you set the HAVE_DOT tag to YES then doxygen will assume the dot tool
# is available from the path. This tool is part of Graphviz, a graph
# visualization toolkit from AT&T and Lucent Bell Labs. The other options in
# this section have no effect if this option is set to NO (the default).
# This option requires the Helvetica font (otherwise, processing slows way
# down with a lot of 'Error: fontconfig: Didn't find expected font family.
# Perhaps URW Type 1 fonts need installing? : Helvetica' error messages.)
#---------------------------------------------------------------------------

HAVE_DOT               = YES

#---------------------------------------------------------------------------
# If the CLASS_GRAPH and HAVE_DOT tags are set to YES then doxygen will
# generate a graph for each documented class showing the direct and indirect
# inheritance relations. Setting this tag to YES will force the the
# CLASS_DIAGRAMS tag to NO.
#---------------------------------------------------------------------------

CLASS_GRAPH            = YES

#---------------------------------------------------------------------------
# If the COLLABORATION_GRAPH and HAVE_DOT tags are set to YES then doxygen
# will generate a graph for each documented class showing the direct and
# indirect implementation dependencies (inheritance, containment, and class
# references variables) of the class with other documented classes.
#---------------------------------------------------------------------------

COLLABORATION_GRAPH    = NO # YES
GROUP_GRAPHS           = NO # YES
UML_LOOK               = YES

#---------------------------------------------------------------------------
# If set to YES, the inheritance and collaboration graphs will show the
# relations between templates and their instances.
#---------------------------------------------------------------------------

TEMPLATE_RELATIONS     = NO

#---------------------------------------------------------------------------
# If the ENABLE_PREPROCESSING, SEARCH_INCLUDES, INCLUDE_GRAPH, and HAVE_DOT
# tags are set to YES then doxygen will generate a graph for each documented
# file showing the direct and indirect include dependencies of the file with
# other documented files.
#---------------------------------------------------------------------------

INCLUDE_GRAPH          = NO # YES

#---------------------------------------------------------------------------
# If the ENABLE_PREPROCESSING, SEARCH_INCLUDES, INCLUDED_BY_GRAPH, and
# HAVE_DOT tags are set to YES then doxygen will generate a graph for each
# documented header file showing the documented files that directly or
# indirectly include this file.
#---------------------------------------------------------------------------

INCLUDED_BY_GRAPH      = NO # YES

#---------------------------------------------------------------------------
# If the CALL_GRAPH and HAVE_DOT tags are set to YES then doxygen will
# generate a call dependency graph for every global function or class
# method. Note that enabling this option will significantly increase the
# time of a run. So in most cases it will be better to enable call graphs
# for selected functions only using the \callgraph command.
#
# Indeed!  It can make a 5-minute documentation build into an hour-long
# wait.
# 
# Also seems to be called "CALLER_GRAPH" and \callergraph.
#
#---------------------------------------------------------------------------

CALL_GRAPH             = NO
CALLER_GRAPH           = NO

#---------------------------------------------------------------------------
# If the GRAPHICAL_HIERARCHY and HAVE_DOT tags are set to YES then doxygen
# will create a graphical hierarchy of all classes instead of a textual one.
#---------------------------------------------------------------------------

GRAPHICAL_HIERARCHY    = YES
DIRECTORY_GRAPH        = YES
DOT_IMAGE_FORMAT       = png

#---------------------------------------------------------------------------
# The tag DOT_PATH can be used to specify the path where the dot tool can be
# found. If left blank, it is assumed the dot tool can be found on the path.
#
# The DOTFILE_DIRS tag can be used to specify one or more directories that
# contain dot files that are included in the documentation (see the \dotfile
# command).
#---------------------------------------------------------------------------

DOT_PATH               = 
DOTFILE_DIRS           = 

#---------------------------------------------------------------------------
# The MAX_DOT_GRAPH_WIDTH tag can be used to set the maximum allowed width
# (in pixels) of the graphs generated by dot. If a graph becomes larger than
# this value, doxygen will try to truncate the graph, so that it fits within
# the specified constraint. Beware that most browsers cannot cope with very
# large images.
#
# The MAX_DOT_GRAPH_HEIGHT tag can be used to set the maximum allows height
# (in pixels) of the graphs generated by dot. If a graph becomes larger than
# this value, doxygen will try to truncate the graph, so that it fits within
# the specified constraint. Beware that most browsers cannot cope with very
# large images.
#
# Obsolete:
#
#  MAX_DOT_GRAPH_WIDTH    = 1024
#  MAX_DOT_GRAPH_HEIGHT   = 1024
#---------------------------------------------------------------------------

MAX_DOT_GRAPH_DEPTH    = 1000
DOT_TRANSPARENT        = NO
DOT_MULTI_TARGETS      = NO

#---------------------------------------------------------------------------
# If the GENERATE_LEGEND tag is set to YES (the default) Doxygen will
# generate a legend page explaining the meaning of the various boxes and
# arrows in the dot generated graphs.
#---------------------------------------------------------------------------

GENERATE_LEGEND        = YES

#---------------------------------------------------------------------------
# If the DOT_CLEANUP tag is set to YES (the default) Doxygen will remove the
# intermedate dot files that are used to generate the various graphs.
#---------------------------------------------------------------------------

DOT_CLEANUP            = YES

#---------------------------------------------------------------------------
# Configuration::additions related to the search engine   
#---------------------------------------------------------------------------
#
# The SEARCHENGINE tag specifies whether or not a search engine should be
# used. If set to NO the values of all tags below this one will be ignored.
#
#---------------------------------------------------------------------------

SEARCHENGINE           = NO

#*****************************************************************************
# sequencer24/doc/dox/doxy_reference.cfg
#-----------------------------------------------------------------------------
# vim: ts=3 sw=3 et ft=cfg
#-----------------------------------------------------------------------------
